import play.sbt.routes.RoutesKeys
import sbt.Def
import uk.gov.hmrc.DefaultBuildSettings
import uk.gov.hmrc.versioning.SbtGitVersioning.autoImport.majorVersion
import com.lucidchart.sbt.scalafmt.ScalafmtCorePlugin.autoImport._

lazy val appName: String = "secure-message-stub"

lazy val root = (project in file("."))
  .enablePlugins(PlayScala, SbtDistributablesPlugin, SbtSassify)
  .disablePlugins(JUnitXmlReportPlugin) //Required to prevent https://github.com/scalatest/scalatest/issues/1427
  .settings(DefaultBuildSettings.scalaSettings: _*)
  .settings(DefaultBuildSettings.defaultSettings(): _*)
  .configs(IntegrationTest)
  .settings(inConfig(Test)(testSettings): _*)
  .settings(majorVersion := 0)
  .settings(ThisBuild / useSuperShell := false)
  .settings(
    IntegrationTest / testOptions := Seq(Tests.Filter(_ endsWith "ItTestSuite")),
    inConfig(IntegrationTest)(
      scalafmtCoreSettings ++
        Seq(
          compile / compileInputs := Def.taskDyn {
            val task = test in (resolvedScoped.value.scope in scalafmt.key)
            val previousInputs = (compileInputs in compile).value
            task.map(_ => previousInputs)
          }.value
        )
    )
  )
  .settings(
    scalaVersion := "2.13.8",
    name := appName,
    RoutesKeys.routesImport ++= Seq("models._", "controllers.binders._"),
    PlayKeys.playDefaultPort := 9202,
    libraryDependencies ++= AppDependencies(),
    retrieveManaged := true,
    update / evictionWarningOptions :=
      EvictionWarningOptions.default.withWarnScalaVersionEviction(false),
    // concatenate js
    Concat.groups := Seq(
      "javascripts/securemessagestub-app.js" ->
        group(Seq("javascripts/show-hide-content.js", "javascripts/securemessagestub.js"))
    ),
    // prevent removal of unused code which generates warning errors due to use of third-party libs
    uglifyCompressOptions := Seq("unused=false", "dead_code=false"),
    pipelineStages := Seq(digest),
    // below line required to force asset pipeline to operate in dev rather than only prod
    Assets / pipelineStages := Seq(concat, uglify),
    // only compress files generated by concat
    uglify / includeFilter := GlobFilter("securemessagestub-*.js")
  )
  .settings(
    // suppress warnings in generated routes files & html for unused-imports
    scalacOptions += "-Wconf:src=routes/.*:s",
    scalacOptions += "-Wconf:src=html/.*:s"
  )
  .settings(ScoverageSettings())

lazy val testSettings: Seq[Def.Setting[_]] = Seq(
  fork := true,
  javaOptions ++= Seq(
    "-Dconfig.resource=test.application.conf"
  )
)

dependencyOverrides ++= AppDependencies.overrides
